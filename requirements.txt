1. Como utilizaremos o framework fastify precisamos instalar as dependências necessárias para tal
- npm i fastify (Instala as dependências do fastify)
- npm init -y  (Cria um package.json) 



2. Vamos rodar nosso projeto no format ES Modules (ECMAScript Modules). Por conta disso precisamos adicionar o seguinte item ao package.json:
- "type": "module" (Abaixo de "main")



3. É interessante também adicionar ao package.json um item a mais:
- "dev": "node --watch server.js" (Abaixo de "start")
- Agora para rodar basta fazer 'npm run dev' no terminal



4. Devemos criar um arquivo chamdo routes.http e instalar a extensão Rest Client para testarmos as rotas da nossa API (Ou apenas utilize o Postman)


Observacao: Vamos criar um banco de dados PostgreSQL que será hospedado no Neon Database
5. Instalando as dependências necessárias para a conexão com o nosssa banco de dados PostgreSQL:
- npm install dotenv @neondatabase/serverless fastify.
- dotenv: Para carregar variáveis de ambiente do .env.
- @neondatabase/serverless: Para conectar ao banco Neon PostgreSQL.
IMPORTANTE: Não se esqueça de criar um arquivo .env e colcoar lá "DATABASE_URL" do seu banco de dados.



6. Criamos um arquivo novo chamado "servidor.js", onde faremos nossa API rodar com um banco de dados PostgreSQL
- Precisamos reescrever as linhas de código para se adequar ao padrão SQL.
- Precisamos trocar "dev": "node --watch server.js" por "dev": "node --watch servidor.js" no arquivo package.json.



7. Antes de rodar o servidor, precisamos criar a tabela no banco Neon.
- Acesse o Neon Database e vá até o console SQL.
- Execute o comando SQl para criar sua tabela